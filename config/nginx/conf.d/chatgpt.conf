upstream chatgpt {
    server chatgpt:3000;
}

server {
    listen 443 ssl http2;
    access_log /var/log/nginx/chatgpt_access_443.log main;
    error_log /var/log/nginx/chatgpt_error_443.log debug;
    server_name stg.testservice.chatgpt;

    ssl_certificate /etc/nginx/cert/chatgpt.cert.crt;
    ssl_certificate_key /etc/nginx/cert/chatgpt.cert.key;

    #SSL Optimization
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:20m;
    # ssl_session_tickets off;

    #modern configuration
    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers AES256+EECDH:AES256+EDH:AES128-SHA:AES256-SHA:AES128-SHA256:AES256-SHA256:!RC4:!DES-CBC3-SHA:!aNULL;

    proxy_redirect off;
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-Proto https;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-SSL-SESSIONID SESSIONID;
    proxy_http_version 1.1;

    location / {
        auth_basic "Restricted Content";
        auth_basic_user_file    /etc/nginx/auth_basic/htpasswd;

        if ($request_uri ~* "\.(css|png|jpg|jpeg|gif|ico|woff|otf|ttf|eot|svg|js)($|\?)") {
           access_log off;
        }

        proxy_pass http://chatgpt;
    }

    location /api/ {
        auth_basic off;
        proxy_pass http://chatgpt;
    }

    location /_next/ {
        auth_basic off;
        proxy_pass http://chatgpt;
    }

    location /api/models {
        access_log off;
        proxy_pass http://chatgpt;
    }
}

server {
    listen 80;
    access_log /var/log/nginx/chatgpt_access_80.log main;
    error_log /var/log/nginx/chatgpt_error_80.log debug;
    server_name stg.testservice.chatgpt;

    location / {
        return 301 https://$host$request_uri;
    }
}